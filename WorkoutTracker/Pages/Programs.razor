@using WorkoutTracker.DataAccess;
@using WorkoutTracker.Models;

<div class="container fade-in fade-out">
    <div class="row">
        <div class="col-12">
            <div style="display: inline-block"><h3>Programs</h3></div>
            <ModalWindow Type="Program" Activity="add" HandleStateChange="@RefreshUi" />
        </div>
    </div>

    <div class="col-12">
        @if (documents.Count == 0)
        {
            <div>you haven't added any programs yet.</div>
        }
        else
        {
            <table class="table">
                <thead></thead>
                <tbody>
                    @foreach (var document in documents)
                    {
                        <tr>
                            <td class="align-middle">
                                @document.Name
                                @if (document.Active)
                                {
                                    <span class="text-success fs-6" style="margin-left: 2em;">active</span>
                                }
                            </td>
                            <td><ModalWindow Type="Program" Activity="edit" Document="@document" HandleStateChange="@RefreshUi" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        }        
    </div>
</div>

@code {
    [CascadingParameter]
    public Dictionary<string, IndexedDb> Collections { get; set; }
    private List<Program> documents = new List<Program>();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RefreshUi();
        }
    }

    public async void RefreshUi()
    {
        var query = @"{}";
        documents = await Collections["programs"].Find<List<Program>>(query);
        StateHasChanged();
    }
}

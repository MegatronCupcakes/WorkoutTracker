@using WorkoutTracker.DataAccess;
@using WorkoutTracker.Models;

<div class="container fade-in fade-out">
    <div class="row">
        <div class="col-12">
            <div style="display: inline-block"><h3>Routines</h3></div>
            <ModalWindow Type="Routine" Activity="add" HandleStateChange="@RefreshUi" />
        </div>
    </div>

    <div class="col-12">
        @if (documents.Count == 0)
        {
            <div>you haven't added any routines yet.</div>
        }
        else
        {
            <table class="table">
                <thead></thead>
                <tbody>
                    @foreach (var document in documents)
                    {
                        <tr>
                            <td class="align-middle">@document.Name</td>
                            <td><ModalWindow Type="Routine" Activity="edit" Document="@document" HandleStateChange="@RefreshUi" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        }        
    </div>
</div>

@code {
    [CascadingParameter]
    public Dictionary<string, IndexedDb> Collections { get; set; }
    private List<Routine> documents = new List<Routine>();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RefreshUi();
        }
    }

    public async void RefreshUi()
    {
        var query = @"{}";
        documents = await Collections["routines"].Find<List<Routine>>(query, new { Sort = new { CreatedAt = -1 } });
        StateHasChanged();
    }
}

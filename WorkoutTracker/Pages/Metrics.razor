@using WorkoutTracker.DataAccess
@using pax.BlazorChartJs

<div class="container fade-in fade-out">
    <h3>Track Workouts</h3>
    <div class="col-12">
        <div class="w-75 h-50">
            <ChartComponent @ref="chartComponent"
                            ChartJsConfig="chartJsConfig"
                            OnEventTriggered="ChartEventTriggered">
            </ChartComponent>
        </div>
    </div>    
</div>


@code {
    [CascadingParameter]
    public Dictionary<string, IndexedDb> Collections { get; set; }
    [CascadingParameter]
    public Action? ToggleSpinner { get; set; }

    ChartJsConfig chartJsConfig = null!;
    ChartComponent? chartComponent;
    private bool chartReady;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RefreshUi();
        }
    }

    private void ChartEventTriggered(ChartJsEvent chartJsEvent)
    {
        if (chartJsEvent is ChartJsInitEvent initEvent)
        {
            chartReady = true;
        }
    }

    private async void RefreshUi()
    {
        var workouts = await Collections["workouts"].Find<List<WorkoutTracker.Models.Workout>>(
            new { Completed = true },
            new { Sort = new { StartedAt = 1 }, Fields = new {Routines = 1 } }
        );
        var exercises = workouts.Select(workout => workout.Routines.Select(routine => routine.RoutineExercises));
        

        chartJsConfig = new ChartJsConfig()
            {
                Type = ChartType.line,
                Data = new ChartJsData()
                {
                    Labels = new List<string>() { "Jan", "Feb", "Mar" },
                    Datasets = new List<ChartJsDataset>()
                {
                    new LineDataset()
                    {
                        Label = "Dataset 1",
                        Data = new List<object>() { 1, 2, 3 }
                    }
                }
                }
            };
    }
}
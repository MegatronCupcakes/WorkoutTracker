@page "/"
@inject IJSRuntime js;
@using WorkoutTracker.DataAccess;
@using WorkoutTracker.Models;

<div class="container">
    <h3>Workout</h3>
    <p>perform a workout, yo!</p>

    <div class="col-12">
        @if(programs.Count == 0)
        {
            <div>you don't have any active workouts</div>
        }
        else
        {
            @foreach (var program in programs)
            {
                <div class="row listing">
                    <div class="row">
                        <div class="col-4">@program.Name</div>
                    </div>
                </div>
            }
        }        
    </div>    
</div>

@code {
    private IndexedDb? indexedDb;
    private List<Program> programs = new List<Program>();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            indexedDb = new IndexedDb(js, "programs");
            indexedDb.DbInitialized += indexedDb_DbInitialized;
        }
    }

    private void indexedDb_DbInitialized(object sender, bool Initialized)
    {
        indexedDb = (IndexedDb)sender;
        RefreshUi();
    }

    public async void RefreshUi()
    {
        var query = new Dictionary<string, bool>() { { "active", true } };
        programs = await indexedDb.Find<List<Program>>(query);
        StateHasChanged();
    }

}

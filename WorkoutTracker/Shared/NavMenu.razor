<nav class="navbar navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
        <a class="navbar-brand"><span>WorkoutTracker</span></a>
        @if (!ShowWizard)
        {
            <button class="navbar-toggler d-block" type="button" data-bs-toggle="offcanvas" data-bs-target="#navbarContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="navbarContent" data-bs-scroll="true">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">
                        WorkoutTracker
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                        @foreach (KeyValuePair<string, string> pageEntry in PageDictionary)
                        {
                            <li class="nav-item">
                                <a class="nav-link@(pageEntry.Key == DisplayPage["activePage"] ? " active" : "")" onclick="@(() => HandleNavClick(pageEntry.Key))" data-bs-dismiss="offcanvas">
                                    <div class="col-2"><img class="nav-svg" src="@pageEntry.Value" /></div>
                                    <div class="col-10">@CapitalizePageName(pageEntry.Key)</div>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }        
    </div>
</nav>



@code {
    [Parameter]
    public Dictionary<string, string>? DisplayPage { get; set; }
    [Parameter]
    public Action? HandleUiChange { get; set; }
    [Parameter]
    public bool ShowWizard { get; set; } = true;

    private Dictionary<string, string> PageDictionary { get; set; } = new Dictionary<string, string>()
    {
        {"workout", "noun-weightlifting-533272.svg"},
        {"metrics", "noun-graph-6237006.svg"},
        {"programs", "noun-collection-2221169.svg"},
        {"routines", "noun-collection-2221168.svg"},
        {"exercises", "noun-weight-976409.svg"},
        {"export", "noun-exit-792128.svg"},
        {"import", "noun-exit-793099.svg"},
        {"settings", "noun-settings-3398263.svg"},
        {"about", "noun-about-2479027.svg"}
    };
    private string CapitalizePageName(string pageName)
    {
        return char.ToUpper(pageName[0]) + pageName.Substring(1);
    }

    private async void HandleNavClick(string selection)
    {        
        DisplayPage["activePage"] = selection;
        HandleUiChange?.Invoke();
    }

}
